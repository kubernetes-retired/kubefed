{{ if or (not .Values.global.scope) (eq .Values.global.scope "Cluster") }}
{{if not (.Capabilities.APIVersions.Has "types.kubefed.io/v1beta1") }}
---
# if there are instances of these CRDs in this chart, helm can detect the existence of these here, so that validation passes
{{.Files.Get "files/crds.yaml"}}
{{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: kubefed-crds
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
data:
  crds.yaml: |-
{{.Files.Get "files/crds.yaml" | printf "%s" | indent 4}}
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: kubefed-crds
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: kubefed-crds
      containers:
        - name: kubefed-crds
          image: "bitnami/kubectl:1.16.2"
          volumeMounts:
            - name: kubefed-crds
              mountPath: /etc/kubefed-crds
              readOnly: true
          command: ["kubectl", "apply", "-f", "/etc/kubefed-crds"]
      volumes:
        - name: kubefed-crds
          configMap:
            name: kubefed-crds
      restartPolicy: OnFailure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubefed-crds
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubefed-crds
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubefed-crds
subjects:
  - kind: ServiceAccount
    name: kubefed-crds
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefed-crds
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
{{ end }}
