apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefed-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    kubefed-control-plane: controller-manager
{{- if .Values.controller.annotations }}
  annotations:
{{ toYaml .Values.controller.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      kubefed-control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      labels:
        kubefed-control-plane: controller-manager
      {{- if or .Values.controller.forceRedeployment .Values.controller.podAnnotations }}
      annotations:
        {{- if .Values.controller.forceRedeployment }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
{{- if .Values.controller.podAnnotations }}
{{ toYaml .Values.controller.podAnnotations | indent 8 }}
{{- end }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.commonNodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.commonTolerations | nindent 8 }}
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-controller
      containers:
      - command:
        - /hyperfed/controller-manager
        - "--v={{ .Values.controller.logLevel }}"
        image: "{{ .Values.controller.repository }}/{{ .Values.controller.image }}:{{ .Values.controller.tag }}"
        imagePullPolicy: "{{ .Values.controller.imagePullPolicy }}"
        name: controller-manager
{{- if .Values.controller.env }}
        env:
{{- range $key, $value := .Values.controller.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
{{- end }}
{{- end }}
        ports:
        - containerPort: 9090
          name: metrics
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 3
        resources:
{{- if .Values.controller.resources }}
{{ toYaml .Values.controller.resources | indent 12 }}
{{- end }}
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: kubefed-admission-webhook
  labels:
    kubefed-admission-webhook: "true"
{{- if .Values.webhook.annotations }}
  annotations:
{{ toYaml .Values.webhook.annotations | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      kubefed-admission-webhook: "true"
  template:
    metadata:
      labels:
        kubefed-admission-webhook: "true"
      {{- if .Values.webhook.forceRedeployment }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.commonNodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.commonTolerations | nindent 8 }}
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-admission-webhook
      containers:
      - name: admission-webhook
        image: "{{ .Values.webhook.repository }}/{{ .Values.webhook.image }}:{{ .Values.webhook.tag }}"
        imagePullPolicy: "{{ .Values.webhook.imagePullPolicy }}"
{{- if .Values.webhook.env }}
        env:
{{- range $key, $value := .Values.webhook.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
{{- end }}
{{- end }}
        command:
        - "/hyperfed/webhook"
        - "--secure-port=8443"
        - "--cert-dir=/var/serving-cert/"
        - "--v={{ .Values.webhook.logLevel }}"
        ports:
        - containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
        resources:
{{- if .Values.webhook.resources }}
{{ toYaml .Values.webhook.resources | indent 12 }}
{{- end }}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubefed-admission-webhook-serving-cert
