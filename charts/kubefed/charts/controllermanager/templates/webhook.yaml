{{- $ca := genCA "kubefed-admission-webhook-ca" 3650 }}
{{- $cn := printf "%s-admission-webhook" .Release.Name }}
{{- $altName1 := printf "kubefed-admission-webhook.%s" .Release.Namespace }}
{{- $altName2 := printf "kubefed-admission-webhook.%s.svc" .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2) 3650 $ca }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# using the namespace.
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  name: validations.core.kubefed.io-{{ .Release.Namespace }}
{{- else }}
  name: validations.core.kubefed.io
{{- end }}
  annotations:
  {{- if .Values.certManager.enabled }}
    cert-manager.io/inject-ca-from: {{ printf "%s/%s%s" .Release.Namespace .Release.Name "-root-certificate" | quote }}
  {{- end }}
webhooks:
- admissionReviewVersions:
  - v1beta1
  name: federatedtypeconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /validate-federatedtypeconfigs
    {{- if not .Values.certManager.enabled }}
    caBundle: {{ b64enc $ca.Cert | quote }}
    {{- end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - federatedtypeconfigs
    - federatedtypeconfigs/status
  failurePolicy: Fail
  sideEffects: None
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# For namespace scoped deployments: filter admission webhook requests for
# resources whose namespace matches the default namespace label applied by helm
# upon creating the namespace. User must set this label manually if namespace
# is created prior to installing chart with helm.
# TODO(font): Use custom namespace label once helm adds support for it. See
# https://github.com/helm/helm/issues/4178 for more details.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
- admissionReviewVersions:
  - v1beta1
  name: kubefedclusters.core.kubefed.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /validate-kubefedcluster
    {{- if not .Values.certManager.enabled }}
    caBundle: {{ b64enc $ca.Cert | quote }}
    {{- end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedclusters
    - kubefedclusters/status
  failurePolicy: Fail
  sideEffects: None
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# See comment above.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
- admissionReviewVersions:
  - v1beta1
  name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /validate-kubefedconfig
    {{- if not .Values.certManager.enabled }}
    caBundle: {{ b64enc $ca.Cert | quote }}
    {{- end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
  sideEffects: None
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# See comment above.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{- end }}
---
# The same comments for ValidatingWebhookConfiguration apply here to
# MutatingWebhookConfiguration.
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  name: mutation.core.kubefed.io-{{ .Release.Namespace }}
{{- else }}
  name: mutation.core.kubefed.io
{{- end }}
webhooks:
- admissionReviewVersions:
  - v1beta1
  name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /default-kubefedconfig
    {{- if not .Values.certManager.enabled }}
    caBundle: {{ b64enc $ca.Cert | quote }}
    {{- end }}
  rules:
  - operations:
    - CREATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
  sideEffects: None
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
{{- if not .Values.certManager.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: kubefed-admission-webhook-serving-cert
type: kubernetes.io/tls
stringData:
  tls.crt: {{ $cert.Cert | quote }}
  tls.key: {{ $cert.Key | quote }}
{{- else }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ .Release.Name }}-ca-issuer
spec:
  selfSigned: {}
---
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name}}-root-certificate
spec:
  secretName: {{ .Release.Name }}-root-ca
  duration: 8760h # 1y
  issuerRef:
    name: {{ .Release.Name }}-ca-issuer
  commonName: {{ .Values.certManager.rootCertificate.commonName }}
{{- if .Values.certManager.rootCertificate.organizations }}
  subject:
    organizations:
      {{- toYaml .Values.certManager.rootCertificate.organizations | nindent 4 }}
{{- end }}
  dnsNames:
    {{- toYaml .Values.certManager.rootCertificate.dnsNames | nindent 4 }}
  isCA: true
---
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ .Release.Name }}-issuer
spec:
  ca:
    secretName: {{ .Release.Name}}-root-ca
---
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name }}-certificate
spec:
  secretName: kubefed-admission-webhook-serving-cert
  duration: 8760h # 1y
  issuerRef:
    name: {{ .Release.Name }}-issuer
  dnsNames:
    - kubefed-admission-webhook
    - {{ $altName1 }}
    - {{ $altName2 }}
{{- end }}
